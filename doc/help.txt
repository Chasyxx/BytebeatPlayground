F1 - Pause audio
F2 - Reset t to 0
F3 - Resume audio
F4 - skip back 32768 samples
F5 - skip forward 32768 samples
F6 - Reset t to 0 AND clear persistent memory

Ctrl+T - Switch between no background and a black background for text.
Ctrl-W - Toggle waveform display
Ctrl+S - Save

add ##<filepath> to the begining of your code to save it to that location. e.g:
    ##testfile.bp
    ddAr&/

To load a file, simply add it's name to the command line.
    ./bytebeatPlayground testfie.bp

This program is somewhat inspired by IBNIZ:
http://viznut.fi/ibniz https://github.com/viznut/IBNIZ/
Unlike ibniz's 16.16 fixpoint, bytebeat playground uses 32 bit integers.

Numbers are 32 bit integers. Numerical literals are in hexadecimal.
The syntax is mainly made up of reverse polish notation.
+ - * / % & | ^ ~ l, are as in C
# is for comments
t pushes the time variable to the stack
_ negates
W takes a and b from the stack and saves b in memory index a.
R takes a and pushes what is at memory index a.
Memory is 4MB large.

Stack manipulation

2 3 x -> 3 2
1 d -> 1 1
1 2 p -> 1

{ ... } defines a subroutine (Saves a pointer to mem[x] where x is a value popped off the stack)
    eg. `1{d*}` defines subroutine 1 to square a number.

f calls a subroutine using the pointer stored at mem[x] (x was the value popped off the stack).
    eg. `1f` calls subroutine 1.

Quotes define a ConstantString. Every character inside the quotes (quote escaping pssible, to have a literal quote character you'd use \", and for a backslash use \\) is saved and then immeadiately indexed using a value popped off the stack. If the index goes out of range, it wraps around.
Eg. t"Hello world" is equivalent to `"Hello world"[t%11]` in C, or `"Hello world".charCodeAt(t%11)` in JS.

Square brackers define a ConstantArray. Every index in the array is a two digit hex number (must be two digits and hex). They can be seperated with commas, but they don't have to be.

Eg. [00,01,10,FF] is the same as [000110FF].

Apart from commas, there can't be any other formatting anywhere, or you may get the "Badly formatted hex" or "Badly formatted ConstantArray" errors.
Like a ConstantString, it's then immdeadiately indexed using a value popped off of the stack, wrapping around if out of range.

Eg. t[48,65,6C,6C,6F,20,77,6F,72,6C,64] is the same as t"Hello world"
